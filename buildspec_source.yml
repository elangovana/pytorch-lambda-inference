version: 0.2
## This is meant to run on amazonlinux docker image amazonlinux:2017.03.1.20170812 to work on lambda
## Warning .. I am referencing the "latest" packages which might end up breaking things depending on when you build :-(
## TODO: Fix to use exact version numbers
phases:
  install:
    commands:
      #- yum -y update
      - yum -y install zip
      - yum -y install python36
      - yum -y install python36-pip
      - yum -y install bzip2
      - yum -y install  unzip
      - yum install -y zlib zlib-devel openssl openssl-devel
      - yum install -y cmake-3.3 make-4.1 automake-1.15 gcc48 gcc48-c++ kernel-devel48
      - yum install -y git
      - yum install -y python36-devel
      - gcc --version

  pre_build:
    commands:


      #Install pip
      - curl -O https://bootstrap.pypa.io/get-pip.py
      - python3 get-pip.py
      #set source directory
      - export SOURCE_DIR=pytorch_lambda_poc



  build:
    commands:
      # Build and run tests to make sure all ok
#      - pip install -r source/requirements_dev.txt
#      - pip install pytest
#      - pytest

  post_build:
    commands:
      - pip install virtualenv
      - virtualenv ~/lambdavenv
      - source ~/lambdavenv/bin/activate
    # pip installs

      - pip install Pillow
      - pip install cython   # numpy dependency
      - pip install pyyaml   # pytorch dependency


# numpy install form source
      - git clone --recursive https://github.com/numpy/numpy.git
      - cd numpy
      - git checkout 31465473c491829d636c9104c390062cba005681  # latest release
      - pip install setuptools
      - python setup.py install
      - cd ..

# pytorch install from source
      - git clone https://github.com/pytorch/pytorch.git   
      # Get source corresponding to v0.4.0 pytorch 3749c581b79cba49f511b19fa02c0f50fa05b250 as per https://github.com/pytorch/pytorch/releases
      ## Warning this may not work depending on deep the clone is ..
      - cd pytorch && git checkout 3749c581b79cba49f511b19fa02c0f50fa05b250
      - export NO_CUDA=1  # No cuda as lambda has no GPU..
      - export NO_CUDNN=1
      - export NO_DISTRIBUTED=1 # Turn distributed training mode off
      - git submodule update --init
      - python setup.py install
      - cd



    # Zip package
      - mkdir buildoutput
      - cd $VIRTUAL_ENV/lib/python3.6/site-packages
      - zip -r9 ~/buildoutput/pytorchzip_lambda_package.zip *
      - cd
      - cd $SOURCE_DIR && zip -r9 ~/buildoutput/$(SOURCE_DIR)_lambda_package.zip .  --exclude "**/__pycache__/**" "**/tests/**" "**/testing/**"  && cd ..



artifacts:
  files:
    - '**/*'
  base-directory: buildoutput
